$date
	Sun Oct 20 02:54:08 2024
$end
$version
	QuestaSim Version 2023.1
$end
$timescale
	1ns
$end

$scope module tb_ripple_carry_adder $end
$var parameter 32 ! N $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 1 $ Cin $end
$var reg 1 % Cout $end
$var reg 4 & Sum [3:0] $end

$scope module uut $end
$var wire 1 ' A [3] $end
$var wire 1 ( A [2] $end
$var wire 1 ) A [1] $end
$var wire 1 * A [0] $end
$var wire 1 + B [3] $end
$var wire 1 , B [2] $end
$var wire 1 - B [1] $end
$var wire 1 . B [0] $end
$var wire 1 / Cin $end
$var parameter 32 0 N $end
$var reg 1 1 Cout $end
$var reg 4 2 Sum [3:0] $end
$var reg 5 3 carry [4:0] $end

$scope begin genblk1 $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 4 i $end

$scope module fa $end
$var wire 1 * A $end
$var wire 1 . B $end
$var wire 1 5 Cin $end
$var reg 1 6 Cout $end
$var reg 1 7 Sum $end
$upscope $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 8 i $end

$scope module fa $end
$var wire 1 ) A $end
$var wire 1 - B $end
$var wire 1 9 Cin $end
$var reg 1 : Cout $end
$var reg 1 ; Sum $end
$upscope $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 < i $end

$scope module fa $end
$var wire 1 ( A $end
$var wire 1 , B $end
$var wire 1 = Cin $end
$var reg 1 > Cout $end
$var reg 1 ? Sum $end
$upscope $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 @ i $end

$scope module fa $end
$var wire 1 ' A $end
$var wire 1 + B $end
$var wire 1 A Cin $end
$var reg 1 B Cout $end
$var reg 1 C Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0/
0.
1-
0,
0+
1*
0)
0(
0'
05
09
0=
0A
b100 !
b1 "
b10 #
0$
0%
b11 &
b100 0
01
b11 2
b0 3
b0 4
b1 8
b10 <
b11 @
06
17
0:
1;
0>
0?
0B
0C
$end
#10
b1101 "
b1011 #
1.
1+
1(
1'
0?
1B
07
16
b11110 3
b1000 2
b1000 &
11
19
0;
1:
1%
1=
1>
1A
1C
#20
b1111 "
b1111 #
1$
1/
b11111 3
1,
1)
15
17
1;
1?
b1111 2
b1111 &
#30
b110 "
b101 #
0$
0/
b1000 3
0-
0+
0*
0'
05
06
0B
1;
b1011 2
b1011 &
01
09
0:
0%
0=
0?
